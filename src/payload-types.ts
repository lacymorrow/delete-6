/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    pages: Page;
    media: Media;
    faqs: Faq;
    features: Feature;
    testimonials: Testimonial;
    rbac: Rbac;
    'vercel-deployments': VercelDeployment;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    faqs: FaqsSelect<false> | FaqsSelect<true>;
    features: FeaturesSelect<false> | FeaturesSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    rbac: RbacSelect<false> | RbacSelect<true>;
    'vercel-deployments': VercelDeploymentsSelect<false> | VercelDeploymentsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    settings: Setting;
  };
  globalsSelect: {
    settings: SettingsSelect<false> | SettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  /**
   * The title of the page
   */
  title: string;
  /**
   * The URL-friendly slug for the page (e.g., 'about-us')
   */
  slug: string;
  meta?: {
    /**
     * Override the default meta title
     */
    title?: string | null;
    /**
     * Brief description for search engines
     */
    description?: string | null;
    /**
     * Social sharing image
     */
    image?: (number | null) | Media;
  };
  layout: (
    | {
        /**
         * The main heading for this section
         */
        heading: string;
        /**
         * Optional subheading text
         */
        subheading?: string | null;
        /**
         * Background or featured image
         */
        image?: (number | null) | Media;
        /**
         * Text for the call-to-action button
         */
        ctaText?: string | null;
        /**
         * URL or path for the call-to-action button
         */
        ctaLink?: string | null;
        /**
         * Choose the layout style for this hero section
         */
        style?: ('default' | 'centered' | 'split') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'hero';
      }
    | {
        /**
         * The main content for this section
         */
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        /**
         * Choose the width of the content container
         */
        width?: ('default' | 'wide' | 'narrow') | null;
        /**
         * Choose a background style for this section
         */
        background?: ('none' | 'gray' | 'accent') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        /**
         * Optional section heading
         */
        heading?: string | null;
        /**
         * Select features to display in this section
         */
        features: (number | Feature)[];
        /**
         * Choose how to display the features
         */
        layout?: ('grid' | 'list' | 'carousel') | null;
        /**
         * Number of columns in grid layout
         */
        columns?: ('2' | '3' | '4') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'features';
      }
    | {
        /**
         * Optional section heading
         */
        heading?: string | null;
        /**
         * Select testimonials to display in this section
         */
        testimonials: (number | Testimonial)[];
        /**
         * Choose how to display the testimonials
         */
        layout?: ('grid' | 'slider' | 'single') | null;
        /**
         * Choose a background style for this section
         */
        background?: ('none' | 'light' | 'dark') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'testimonials';
      }
  )[];
  /**
   * Date when this page was published
   */
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "features".
 */
export interface Feature {
  id: number;
  name: string;
  description: string;
  category: 'core' | 'dx' | 'backend' | 'advanced' | 'security' | 'devops' | 'support';
  plans: ('bones' | 'muscles' | 'brains')[];
  badge?: ('new' | 'popular' | 'pro') | null;
  /**
   * Lucide icon name
   */
  icon?: string | null;
  /**
   * Order within category
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  name?: string | null;
  role?: string | null;
  company?: string | null;
  testimonial: string;
  username?: string | null;
  verified?: boolean | null;
  featured?: boolean | null;
  image?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface Faq {
  id: number;
  question: string;
  answer: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  category?: ('general' | 'technical' | 'pricing' | 'support') | null;
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rbac".
 */
export interface Rbac {
  id: number;
  name: string;
  description: string;
  type: 'role' | 'permission';
  resource?: ('team' | 'project' | 'user' | 'api_key' | 'billing' | 'settings') | null;
  action?: ('create' | 'read' | 'update' | 'delete' | 'manage') | null;
  permissions?: (number | Rbac)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Stores details of Vercel deployments initiated via Shipkit.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vercel-deployments".
 */
export interface VercelDeployment {
  id: number;
  teamId?: string | null;
  projectId: string;
  deploymentId: string;
  deploymentDashboardUrl?: string | null;
  deploymentUrl?: string | null;
  productionDeployHookUrl?: string | null;
  projectDashboardUrl?: string | null;
  projectName: string;
  repositoryUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'faqs';
        value: number | Faq;
      } | null)
    | ({
        relationTo: 'features';
        value: number | Feature;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'rbac';
        value: number | Rbac;
      } | null)
    | ({
        relationTo: 'vercel-deployments';
        value: number | VercelDeployment;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              heading?: T;
              subheading?: T;
              image?: T;
              ctaText?: T;
              ctaLink?: T;
              style?: T;
              id?: T;
              blockName?: T;
            };
        content?:
          | T
          | {
              content?: T;
              width?: T;
              background?: T;
              id?: T;
              blockName?: T;
            };
        features?:
          | T
          | {
              heading?: T;
              features?: T;
              layout?: T;
              columns?: T;
              id?: T;
              blockName?: T;
            };
        testimonials?:
          | T
          | {
              heading?: T;
              testimonials?: T;
              layout?: T;
              background?: T;
              id?: T;
              blockName?: T;
            };
      };
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs_select".
 */
export interface FaqsSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  category?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "features_select".
 */
export interface FeaturesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  category?: T;
  plans?: T;
  badge?: T;
  icon?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  company?: T;
  testimonial?: T;
  username?: T;
  verified?: T;
  featured?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rbac_select".
 */
export interface RbacSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  type?: T;
  resource?: T;
  action?: T;
  permissions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vercel-deployments_select".
 */
export interface VercelDeploymentsSelect<T extends boolean = true> {
  teamId?: T;
  projectId?: T;
  deploymentId?: T;
  deploymentDashboardUrl?: T;
  deploymentUrl?: T;
  productionDeployHookUrl?: T;
  projectDashboardUrl?: T;
  projectName?: T;
  repositoryUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  /**
   * Indicates whether initial data seeding has been completed
   */
  seedCompleted?: boolean | null;
  /**
   * When the initial data seeding was completed
   */
  seedCompletedAt?: string | null;
  /**
   * The title of the site used in various places
   */
  siteTitle?: string | null;
  /**
   * A brief description of the site used for SEO
   */
  siteDescription?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  seedCompleted?: T;
  seedCompletedAt?: T;
  siteTitle?: T;
  siteDescription?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}